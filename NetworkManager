/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Eeshan
 */
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class NetworkManager {
    
    private Socket _socket;
    private BufferedReader _enter;
    private BufferedWriter _leave;
    private static NetworkManager _instance;
    private ChatClient _chatInterface;
    
    public static NetworkManager getInstance() {
        if (_instance == null) {
            _instance = new NetworkManager();
        }
        return _instance;
    }
    
    public void hearServer() {
        initializeHeartBeat();
        try {
            while (true) {
                String packet = recieve();
                if (packet.startsWith("200")) {
                    
                } else if (packet.startsWith("400")) {
                    JOptionPane.showMessageDialog(_chatInterface, packet.substring(4), "Disconnected", JOptionPane.ERROR_MESSAGE);
                    System.exit(0);
                } else if (packet.startsWith("500")) {
                    JOptionPane.showMessageDialog(_chatInterface, packet.substring(4), "Error", JOptionPane.WARNING_MESSAGE);
                } else if (packet.startsWith("Room")) {
                    String[] p = packet.split("[ ]");
                    try {
                        _chatInterface.setTitle("Room " + p[1] + "@" + _socket.getInetAddress().getHostAddress());
                    } catch (Exception e) {
                    }
                } else if (packet.startsWith("LIST")) {
                    _chatInterface.cleanList();
                    int count = packet.split("[ ]").length;
                    for (int i = 1; i < count; i++) {
                        User u;
                        u = new User(packet.split("[ ]")[i]);
                        _chatInterface.addUser(u);
                    }
                    
                } else if(!packet.isEmpty()) {
                    _chatInterface.addMessage(packet);
                }
            }
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(_chatInterface, "Lost Connection", "Disconnected", JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }
    }
    
    public void setServer(String IP, int port) {
        try {
            _socket = new Socket(IP, port);
            _enter = new BufferedReader(new InputStreamReader(_socket.getInputStream()));
            _leave = new BufferedWriter(new PrintWriter(_socket.getOutputStream()));
        } catch (IOException ex) {
            Logger.getLogger(NetworkManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void submit(String var) {
        if (!var.isEmpty()) {
            try {
                _leave.write(var + "\n");
                _leave.flush();
            } catch (IOException ex) {
                Logger.getLogger(NetworkManager.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    public String recieve() {
        String s = "";
        try {
            s = _enter.readLine();
        } catch (IOException ex) {
            
        }
        return s;
    }
    
    public void setInterface(ChatClient c) {
        this._chatInterface = c;
    }

    private void initializeHeartBeat() {
        new Thread(new Runnable() {
                @Override
                public void run() {
                    long heartbeat = System.currentTimeMillis();
                    while (true) {
                        if (System.currentTimeMillis() - heartbeat >= 5000) {
                            submit("BEAT " + System.currentTimeMillis());
                            heartbeat = System.currentTimeMillis();              
                        }
                    }
                }
            }).start();
    }
}
